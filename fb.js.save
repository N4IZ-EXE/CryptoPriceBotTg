⁸const Telegraf = require('telegraf') require('./req')const bot = new Telegraf('const Extra = require('telegraf/extra');    const Markup = require('telegraf/markup')const fs = require('fs'); const path = require('path');    const fse = require('fs-extra');const session = require('telegraf/session');const Stage = require('telegraf/stage');const WizardScene = require('telegraf/scenes/wizard');const ion = new RegExp('.*') const axios = require('axios');bot.telegram.deleteWebhook().then(success => {  success && console.log('🤖 is listening to your commands')  bot.startPolling()});function trx(ctx) {  require("./req")}const superWizard = new WizardScene(  'super-wizard',  ctx => {    ctx.replyWithHTML("<b> Send your Bot Token</b>");    ctx.wizard.state.data = {};    return ctx.wizard.next();  },  ctx => {        ctx.wizard.state.data.name = ctx.message.text;      if(ctx.message.text == "❌ Back"){    start(ctx)      ctx.scene.leave()    return  }       axios.get(`https://api.telegram.org/bot${ctx.wizard.state.data.name}/getMe`)  //console.log(ctx)  .then(res => {    ctx.reply('@'+res.data.result["username"]+' This bot is successfully created and hosted')    const pjson = `module.exports = {  token: '${ctx.wizard.state.data.name}', // token fromm @BotFather    admin: ${ctx.from.id}, // developers id for sending him/her errors }` fs.mkdir(path.join(__dirname, ctx.wizard.state.data.name), (err) => {        let mole = ctx.wizard.state.data.name   fs.writeFile(mole+'/data.js', pjson,(err) => {          // Catch this!    if (err) throw err;    console.log('New create bot')        if (err) {          ctx.reply('❌ Bot token already existed in our bot server')        ctx.scene.leave()    }         fs.readFile('url2.js', 'utf8', function readFileCallback(err, data){       if (err){        throw new Error(err)        return    }     const newbot = data     fs.writeFile(mole+'/url.js', newbot,(err) => {          // Catch this!    if (err) throw err;    console.log('setting up');    ctx.reply("bot successfully created ")    if (err) {          ctx.reply('❌ Bot token already existed in our bot server');        ctx.scene.leave();    }     fs.appendFileSync("req.js", ` \n require('./${mole}/url.js');\n\n`, "UTF-8",{'flags': 'a+'})            trx(ctx)        // Catch this   console.log('dome')    require('./req')    })         })})})    ctx.scene.leave()           }).catch(e => {    console.log(e);         ctx.scene.leave();});   })const stage = new Stage([superWizard]);bot.use(session());bot.use(stage.middleware());bot.hears(['/start','❌ Back' ],ctx =>{ ctx.replyWithMarkdown(`*use /p trx exapmle*`, {    parse_mode:'MARKDOWN',    reply_markup: {         inline_keyboard: [            [{ text: "➕ Add to Group➕", callback_data: "Support chat" }], [{ text: "Channel", callback_data: "clone" }],             [{ text: "Make bot", callback_data: "clone" }],             [{ text: "soon", callback_data: "clone"}]        ],    resize_keyboard:true    }})bot.action('clone', async (ctx) => {    ctx.scene.enter('super-wizard')})bot.command("p" , async ctx => {    let input = ctx.message.text    let startspilt = input.split(" ")[1];              let res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&symbols=${startspilt}`);          let message =`     #️⃣ RANK     : ${res.data[0].market_cap_rank}️⃣ NAME     : ${res.data[0].name} 💲 PRICE    : ${res.data[0].current_price} $🚀 ATH      : ${res.data[0].ath} $📅 ATH DATE : ${res.data[0].ath_date}`       ctx.reply(message)})})